# Purpose:

A simple 
<a href="http://www.datanucleus.org/project/download.html">DataNucleus</a> plugin for
Java object persistence in <a href="http://cassandra.apache.org/">Cassandra</a>.

# About: 

The current status is as follows:

- It allows persistence of simple attributes, one-to-one relations, one-to-many and many-to-many relations through collections and maps.  
 
- It creates a datanucleus.schema every time some element is missing in Cassandra schema, until Cassandra allows dynamic changes to it.

- It works with Cassandra-0.6(.4), under Thrift interface. Data-store code isolation will be improved however, to allow other versions to be used.

- It now supports basic JDOQL queries 

- JPA is not fully functional at the time (work in progress).

- Basic schema creation tool(beta). <a href=http://wiki.github.com/PedroGomes/datanucleus-cassandra/schema-creation/>Schema creation</a>

# Compiling

To build the plugin place the following libs in a folder named lib:

- apache-cassandra-0.6.1.jar <br>
- libthrift-r917130.jar <br>
- datanucleus-core-2.1.0-m2.jar (*)  

Then type ant or ant dist.

----------------
(*) Due to API issues, I chose to use the new core version of datanucleus, this however demands that you compile and generate a jar for the new JDO API, when using the plugin. Sources under:
<a href="http://www.datanucleus.org/downloads/maven2/javax/jdo/jdo2-api/2.3-ec/">JDO2-api</a> 

# Sample code
	
Get the JDO sample in Datanucleus at:

	http://sourceforge.net/projects/datanucleus/files/

Then:

- Alter the JDOQL tests from Main.java, as for now, only simple ranges are supported(read/delete).<br>
- Define the primary key for each class, as the native strategy is not supported (use for example @PrimaryKey annotations in the classes).<br>
- In the datanucleus.properties add/edit:

   javax.jdo.option.ConnectionURL=cassandra:ORMTest://localhost:9160   (*)
   datanucleus.cassandra.replicaPlacementStrategy=org.apache.cassandra.locator.RackUnawareStrategy (+) <br>
   datanucleus.cassandra.replicationFactor=1 (+) <br>
   datanucleus.cassandra.endPointSnitch = org.apache.cassandra.locator.EndPointSnitch (+) <br>
   datanucleus.metadata.validate=false 
   datanucleus.autoCreateSchema=true 

- Run the sample according to the original instructions.

-----------------
(*)The connection URL follows the pattern: cassandra:keySpace://hostaname:port,hostname:port,...
   cassandra:keySpace://hostname:port,ring:default_port can also be used, where the plugin is responsible for the discover of other nodes using the default port. <br>
(+)Used to generate the schema, that for now is only the generation of a file as said above. 

# Feedback

Updated source and an issue tracker are available at:
	
	http://github.com/PedroGomes/datanucleus-cassandra

Your feedback is welcome.




