################################################################################
# Copyright (c) 2010 Pedro Gomes and Universidade do Minho. All rights reserved.
# (Based on datanucleus-hbase. Copyright (c) 2009 Erik Bengtson and others.)
# This program and the accompanying materials are made available under 
# the terms of the DataNucleus License which accompanies this distribution.
#
# Contributions :
#
################################################################################
#
# SchemaTool
#
014000=DataNucleus SchemaTool (version {0}) : Creation of the schema
014001=DataNucleus SchemaTool (version {0}) : Deletion of the schema
014002=DataNucleus SchemaTool (version {0}) : Validation of the schema
014003=DataNucleus SchemaTool (version {0}) : Database information
014004=DataNucleus SchemaTool (version {0}) : Schema information
014005=DataNucleus SchemaTool : Classpath
014006=>>  {0}
014007=No valid input (either a set of metadata/class files, or the name of a persistence-unit) was specified!
014008=An error was encountered creating a PersistenceManagerFactory : {0} - please consult the log for more information.
014009=DataNucleus SchemaTool : Input Files
014010=>>  {0}
014011=Reading {0} input (metadata/class) files ...
014012=Completed read of {0} input (metadata/class) files
014013=Error processing class file ("{0}"), converting to a URL. Please check your specification and CLASSPATH
014014=An error was encountered reading the specified input files. Please consult the log for details. The following may help : {0}
014015=DataNucleus SchemaTool : Handling schema for persistence-unit "{0}"
014016=No "persistence.xml" files were found in the CLASSPATH yet you specified as input the name ("{0}") of a "persistence-unit" to use in SchemaTool. You must have a valid "persistence.xml" file in the CLASSPATH in a valid location to use this option.
014017=No "persistence-unit" of name "{0}" was found in the CLASSPATH. Please check the "persistence.xml" files available
014018=Outputting Schema DDL to "{0}" for all specified classes
014019=Outputting Schema DDL to "{0}" for classes which dont have existing schema
014020=DataNucleus SchemaTool : Persistence Properties
014021=No MetaData was encountered to generate the schema!
014022=>>  {0}={1}
014023=DataNucleus : Help
014024=>> org.datanucleus.SchemaTool [options] [jdo-files] [class-files]
014025=where "options" can be
014026=-create : Create the DB tables for the classes specified by the jdo-files/class-files
014027=-delete : Delete the DB tables for the classes specified by the jdo-files/class-files
014028=-validate : Validate the DB tables for the classes specified by the jdo-files/class-files
014029=-dbinfo : Display the database info (Database version, supported options, jdbc types, etc)
014030=-schemainfo : Display the schema info (DDL statements)
014031=-ddlFile <filename> : write all DDL SQL statements to the given file instead of sending them to the DB
014032=-completeDdl : write the DDL for all tables not just the missing ones (when using ddlFile)
014033=-help : Write this message
014034=and "jdo-files" (and classes specified therein) must be present in the CLASSPATH
014035=and "class-files" must be present in the CLASSPATH
014036=DataNucleus SchemaTool : The mode parameter only accepts values of "create", "delete", "validate", "dbinfo", "schemainfo"
014037=An exception was thrown during the operation of SchemaTool. Please refer to the log for full details. The following may help : {0}
014038=Error parsing JDO meta-data files : {0}
014039=No classes specified !
014040=Class {0} not found ! Please check that the class is in the CLASSPATH.
014041=Database driver/URL not specified !
014042=Error : No JDO MetaData files specified !
014043=SchemaTool completed successfully


SchemaTool.DeleteNotSupported=Not supported in this version of Cassandra.
Cassandra.DatastoreID=Datastore ID not supported for this datastore, but class "{0}" uses it.

Cassandra.Insert.ObjectWithIdAlreadyExists=Object "{0}" being inserted has id "{1}" yet an object with this id already exists in the datastore!
Cassandra.Index.multipleColumns="Only one column is allowed per index"
Cassandra.unknowMember=Unknown index field: "{0}"